---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseHtml from "@/layouts/BaseHtml.astro";
import FormattedDate from "@/components/FormattedDate.astro";

export async function getStaticPaths() {
	const posts = await getCollection("blog");
	return posts.map(post => ({
		params: { slug: post.slug },
		props: post,
	}));
}

type Props = CollectionEntry<"blog">;
const post = Astro.props;
const {
	data: { title, description, pubDate, updatedDate, tags },
} = post;
const qqq = await post.render();
const { Content, remarkPluginFrontmatter } = qqq;
// console.log('=====================', remarkPluginFrontmatter);
---

<BaseHtml title={title} description={description}>
	<article>
		<h1 class="text-3xl text-center">{title}</h1>
		<div>{tags}</div>
		<div class="title">
			<div class="date">
				<FormattedDate date={pubDate} /> - {remarkPluginFrontmatter.minutesRead}
				{
					updatedDate && (
						<div class="last-updated-on">
							Last updated on <FormattedDate date={updatedDate} />
						</div>
					)
				}
			</div>
			<hr />
		</div>
		<div class="prose">
			<Content />
		</div>
	</article>
</BaseHtml>

<style>
	main {
		width: calc(100% - 2em);
		max-width: 100%;
		margin: 0;
	}
	.prose {
		width: 720px;
		max-width: calc(100% - 2em);
		margin: auto;
		padding: 1em;
		color: rgb(var(--gray-dark));
	}
	.title {
		margin-bottom: 1em;
		padding: 1em 0;
		text-align: center;
		line-height: 1;
	}
	.title h1 {
		margin: 0 0 0.5em 0;
	}
	.date {
		margin-bottom: 0.5em;
		color: rgb(var(--gray));
	}
	.last-updated-on {
		font-style: italic;
	}
</style>
