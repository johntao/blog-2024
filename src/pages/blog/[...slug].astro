---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseHtml from "@/layouts/BaseHtml.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import Tags from "@/components/Tags.astro";

export async function getStaticPaths() {
	const posts = await getCollection("blog");
	return posts.map(post => ({
		params: { slug: post.slug },
		props: post,
	}));
}

type Props = CollectionEntry<"blog">;
const post = Astro.props;
const {
	data: { title, description, pubDate, updatedDate, tags, heroImage },
} = post;
const rendered = await post.render();
const { Content, remarkPluginFrontmatter } = rendered;
// console.log('=====================', remarkPluginFrontmatter);
---

<BaseHtml title={title} description={description}>
	<header class="w-full">
		{heroImage && <img class="block mx-auto rounded-xl mb-7" width={1020} height={510} src={heroImage} alt="" />}
	</header>
	<article class="prose prose-lg dark:prose-invert mx-auto">
		<header class="text-center">
			<h2 class="my-0">{title}</h2>
			<div class="mt-3">{tags && <Tags tags={tags} withHref={true} />}</div>
			<div class="text-gray-500">
				<FormattedDate className="sm:inline" date={pubDate} /> - {remarkPluginFrontmatter.minutesRead}
				{
					updatedDate && (
						<div class="italic">
							Last updated on <FormattedDate date={updatedDate} />
						</div>
					)
				}
			</div>
			<hr class="my-4" />
		</header>
		<Content />
	</article>
</BaseHtml>