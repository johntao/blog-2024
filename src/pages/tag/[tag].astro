---
import PostList from "@/components/PostList.astro";
import BaseHtml from "@/layouts/BaseHtml.astro";
import type { BlogEntry } from "@/utils/data.util";
import { getCollection } from "astro:content";

//TODO: rework to group by
export async function getStaticPaths(): Promise<any> {
	const allPosts = await getCollection("blog");
	const postsHaveTags = allPosts.filter(q => q.data.tags);
	const postsNoTags = allPosts.filter(q => !q.data.tags);
	const tags: Set<string> = new Set(
		postsHaveTags
			.map((q) => q.data.tags!)
			.flat(),
	);
	return ['no-tag', ...tags].map((tag, idx) => ({
		params: { tag },
		props: {
			posts: idx
				? postsHaveTags.filter((post) => post.data.tags!.includes(tag))
				: postsNoTags,
		},
	}));
}

interface Props {
	posts: BlogEntry[];
}
const { tag } = Astro.params;
const isUndefined = !tag;
const header = isUndefined ? "Posts without a tag" : `Posts with #${tag}`;
const { posts } = Astro.props;
---

<BaseHtml>
	<header class="text-lg mb-4">{header}</header>
	<PostList posts={posts} />
</BaseHtml>
